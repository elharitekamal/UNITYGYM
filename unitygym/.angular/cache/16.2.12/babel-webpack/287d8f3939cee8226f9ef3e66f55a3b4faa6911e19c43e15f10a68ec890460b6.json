{"ast":null,"code":"import { HtmlImageLayer, cancelCurrentlyRunningPlugins, HtmlVideoLayer } from '@cloudinary/html';\nexport { accessibility, lazyload, placeholder, responsive } from '@cloudinary/html';\nimport * as i0 from '@angular/core';\nimport { VERSION, Component, Input, EventEmitter, Output, NgModule } from '@angular/core';\nimport '@cloudinary/url-gen/assets/CloudinaryImage';\nimport '@cloudinary/url-gen';\nlet APP_VERSION = '2.0.2';\n\n/**\n * Used by SDK Analytics as a token (?a_{token})\n */\nconst SDKAnalyticsConstants = {\n  sdkSemver: APP_VERSION,\n  techVersion: VERSION.full,\n  sdkCode: 'K'\n};\n\n/**\n * @mixin AngularSDK\n * @description The Cloudinary Angular SDK contains components like \\<advanced-image\\> to easily render your media assets from\n * Cloudinary. The SDK also comes with support for optional JS plugins that make the components smart, with features\n * like lazy loading, placeholder, accessibility & responsiveness.\n *\n * @example\n * <caption>\n *  Please note that the order of the plugins is important. See {@link https://cloudinary.com/documentation/sdks/js/frontend-frameworks/index.html#plugin-order|Plugin Order} for more details.\n * </caption>\n * // In your app.module.ts inject the library.\n * import { CloudinaryModule} from '@cloudinary/angular';\n *\n * imports: [\n *   ...,\n *   CloudinaryModule,\n * ],\n *\n * // In your component.ts use `@cloudinary/url-gen` to generate your transformations.\n * // Import the plugins you wish to use\n *\n * import {CloudinaryImage} from \"@cloudinary/url-gen/assets/CloudinaryImage\";\n * import {\n *  AdvancedImage,\n *  accessibility,\n *  responsive,\n *  lazyload,\n *  placeholder\n * } from '@cloudinary/angular';\n *\n * ngOnInit() {\n *   const myCld = new Cloudinary({ cloudName: 'demo'});\n *   this.img = myCld().image('sample');\n *\n *   this.plugins = [lazyload(), placeholder()]\n * }\n *\n * // In your view add the component with your transformation.\n * <advanced-image [cldImg]=\"this.img\" [plugins]=\"this.plugins\"></advanced-image>\n */\n/**\n * @memberOf AngularSDK\n * @type {Component}\n * @description The Cloudinary image component.\n * @prop {CloudinaryImage} transformation Generated by @cloudinary/url-gen\n * @prop {Plugins} plugins Advanced image component plugins accessibility(), responsive(), lazyload(), placeholder()\n * @prop imageAttributes Optional attributes include alt, width, height, loading\n */\nclass CloudinaryImageComponent {\n  constructor(el) {\n    this.el = el;\n  }\n  /**\n   * On init creates a new HTMLLayer instance and initializes with ref to img element,\n   * user generated cloudinaryImage and the plugins to be used.\n   */\n  ngOnInit() {\n    this.htmlLayerInstance = new HtmlImageLayer(this.el.nativeElement.children[0], this.cldImg, this.plugins, SDKAnalyticsConstants);\n    this.addAttributes();\n  }\n  /**\n   * On update, we cancel running plugins and update the image instance with the state of user\n   * cloudinaryImage and the state of plugins.\n   */\n  ngOnChanges() {\n    if (this.htmlLayerInstance) {\n      cancelCurrentlyRunningPlugins(this.htmlLayerInstance.htmlPluginState);\n      this.htmlLayerInstance.update(this.cldImg, this.plugins, SDKAnalyticsConstants);\n    }\n  }\n  /**\n   * On destroy, we cancel the currently running plugins.\n   */\n  ngOnDestroy() {\n    // safely cancel running events on destroy\n    cancelCurrentlyRunningPlugins(this.htmlLayerInstance.htmlPluginState);\n  }\n  /**\n   * Add attributes to img element.\n   */\n  addAttributes() {\n    ['alt', 'width', 'height', 'loading'].forEach(attr => {\n      if (this[attr]) {\n        this.el.nativeElement.children[0].setAttribute(attr, this[attr]);\n        this.el.nativeElement.removeAttribute(attr);\n      }\n    });\n  }\n}\nCloudinaryImageComponent.ɵfac = function CloudinaryImageComponent_Factory(t) {\n  return new (t || CloudinaryImageComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCloudinaryImageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CloudinaryImageComponent,\n  selectors: [[\"advanced-image\"]],\n  inputs: {\n    cldImg: \"cldImg\",\n    plugins: \"plugins\",\n    alt: \"alt\",\n    width: \"width\",\n    height: \"height\",\n    loading: \"loading\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function CloudinaryImageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"img\");\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:block}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CloudinaryImageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'advanced-image',\n      template: `\n    <img />\n  `,\n      styleUrls: ['./cloudinary-image.component.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    cldImg: [{\n      type: Input,\n      args: ['cldImg']\n    }],\n    plugins: [{\n      type: Input,\n      args: ['plugins']\n    }],\n    alt: [{\n      type: Input,\n      args: ['alt']\n    }],\n    width: [{\n      type: Input,\n      args: ['width']\n    }],\n    height: [{\n      type: Input,\n      args: ['height']\n    }],\n    loading: [{\n      type: Input,\n      args: ['loading']\n    }]\n  });\n})();\n\n/**\n * @memberOf AngularSDK\n * @type {Component}\n * @description The Cloudinary video component.\n * @prop {CloudinaryVideo} transformation Generated by @cloudinary/url-gen\n * @prop {VideoPoster} transformation Generated by @cloudinary/url-gen\n * @prop {Plugins} plugins Advanced image component plugins lazyload()\n * @prop videoAttributes Optional attributes include controls, loop, muted, poster, preload, autoplay\n * @prop videoEvents Optional video events include play, loadstart, playing, error, ended\n * @prop {VideoSources} sources Optional sources to generate\n * @example\n *  <caption>\n *  Using custom defined resources.\n * </caption>\n *   vid = new CloudinaryVideo('dog', {cloudName: 'demo'});\n *   sources = [\n {\n        type: 'mp4',\n        codecs: ['vp8', 'vorbis'],\n        transcode: videoCodec(auto())\n},\n {\n        type: 'webm',\n        codecs: ['avc1.4D401E', 'mp4a.40.2'],\n         transcode: videoCodec(auto())\n      }];\n *\n * <advanced-video [cldvid]=\"vid\" [sources]=\"sources\" controls></advanced-video>\n */\nclass CloudinaryVideoComponent {\n  constructor(el) {\n    this.el = el;\n    // Event emitters\n    this.play = new EventEmitter();\n    this.loadstart = new EventEmitter();\n    this.playing = new EventEmitter();\n    this.error = new EventEmitter();\n    this.ended = new EventEmitter();\n    // supported video attributes\n    this.controls = this.el.nativeElement.attributes.controls;\n    this.loop = this.el.nativeElement.attributes.loop;\n    this.muted = this.el.nativeElement.attributes.muted;\n    this.preload = this.el.nativeElement.attributes.preload;\n    this.autoPlay = this.el.nativeElement.attributes.autoplay;\n    this.playsInline = this.el.nativeElement.attributes.playsInline;\n  }\n  /**\n   * On init creates a new HTMLVideoLayer instance and initializes with ref to video element,\n   * user generated cloudinaryVideo and the plugins to be used.\n   */\n  ngOnInit() {\n    this.htmlVideoLayerInstance = new HtmlVideoLayer(this.el.nativeElement.children[0], this.cldVid, this.sources, this.plugins, this.getVideoAttributes(), this.cldPoster);\n    // check if video should be muted. We need to take care of this here since Angular has a bug with binding the muted\n    // attribute\n    if (this.muted) {\n      this.el.nativeElement.children[0].muted = true;\n    }\n    // attach ref to innerRef input\n    this.attachRef();\n  }\n  /**\n   * On update, we cancel running plugins and update the video instance if the src\n   * was changed.\n   */\n  ngOnChanges() {\n    if (this.htmlVideoLayerInstance) {\n      cancelCurrentlyRunningPlugins(this.htmlVideoLayerInstance.htmlPluginState);\n      this.htmlVideoLayerInstance.update(this.cldVid, this.sources, this.plugins, this.getVideoAttributes(), this.cldPoster);\n    }\n  }\n  /**\n   * On destroy, we cancel the currently running plugins.\n   */\n  ngOnDestroy() {\n    // Safely cancel running events on destroy\n    cancelCurrentlyRunningPlugins(this.htmlVideoLayerInstance.htmlPluginState);\n  }\n  /**\n   * Returns video attributes.\n   */\n  getVideoAttributes() {\n    return {\n      controls: this.controls,\n      loop: this.loop,\n      muted: this.muted,\n      poster: this.poster,\n      preload: this.preload,\n      autoplay: this.autoPlay,\n      playsinline: this.playsInline\n    };\n  }\n  emitPlayEvent() {\n    this.play.emit();\n  }\n  emitLoadstartEvent() {\n    this.loadstart.emit();\n  }\n  emitPlayingEvent() {\n    this.playing.emit();\n  }\n  emitErrorEvent() {\n    this.error.emit();\n  }\n  emitEndedEvent() {\n    this.ended.emit();\n  }\n  /**\n   * Attach both this.videoRef and props.innerRef as ref to the given element.\n   */\n  attachRef() {\n    if (this.innerRef) {\n      this.innerRef.nativeElement = this.el.nativeElement.children[0];\n    }\n  }\n}\nCloudinaryVideoComponent.ɵfac = function CloudinaryVideoComponent_Factory(t) {\n  return new (t || CloudinaryVideoComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCloudinaryVideoComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CloudinaryVideoComponent,\n  selectors: [[\"advanced-video\"]],\n  inputs: {\n    cldVid: \"cldVid\",\n    cldPoster: \"cldPoster\",\n    sources: \"sources\",\n    plugins: \"plugins\",\n    poster: \"poster\",\n    innerRef: \"innerRef\"\n  },\n  outputs: {\n    play: \"play\",\n    loadstart: \"loadstart\",\n    playing: \"playing\",\n    error: \"error\",\n    ended: \"ended\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[3, \"play\", \"loadstart\", \"playing\", \"error\", \"ended\"]],\n  template: function CloudinaryVideoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"video\", 0);\n      i0.ɵɵlistener(\"play\", function CloudinaryVideoComponent_Template_video_play_0_listener() {\n        return ctx.emitPlayEvent();\n      })(\"loadstart\", function CloudinaryVideoComponent_Template_video_loadstart_0_listener() {\n        return ctx.emitLoadstartEvent();\n      })(\"playing\", function CloudinaryVideoComponent_Template_video_playing_0_listener() {\n        return ctx.emitPlayingEvent();\n      })(\"error\", function CloudinaryVideoComponent_Template_video_error_0_listener() {\n        return ctx.emitErrorEvent;\n      })(\"ended\", function CloudinaryVideoComponent_Template_video_ended_0_listener() {\n        return ctx.emitEndedEvent;\n      });\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CloudinaryVideoComponent, [{\n    type: Component,\n    args: [{\n      // tslint:disable-next-line:component-selector\n      selector: 'advanced-video',\n      template: `<video (play)=\"emitPlayEvent()\"\n                    (loadstart)=\"emitLoadstartEvent()\"\n                    (playing)=\"emitPlayingEvent()\"\n                    (error)=\"emitErrorEvent\"\n                    (ended)=\"emitEndedEvent\">\n            </video>`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    cldVid: [{\n      type: Input,\n      args: ['cldVid']\n    }],\n    cldPoster: [{\n      type: Input,\n      args: ['cldPoster']\n    }],\n    sources: [{\n      type: Input,\n      args: ['sources']\n    }],\n    plugins: [{\n      type: Input,\n      args: ['plugins']\n    }],\n    poster: [{\n      type: Input,\n      args: ['poster']\n    }],\n    innerRef: [{\n      type: Input,\n      args: ['innerRef']\n    }],\n    play: [{\n      type: Output\n    }],\n    loadstart: [{\n      type: Output\n    }],\n    playing: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }],\n    ended: [{\n      type: Output\n    }]\n  });\n})();\nclass CloudinaryModule {}\nCloudinaryModule.ɵfac = function CloudinaryModule_Factory(t) {\n  return new (t || CloudinaryModule)();\n};\nCloudinaryModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CloudinaryModule\n});\nCloudinaryModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CloudinaryModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [CloudinaryImageComponent, CloudinaryVideoComponent],\n      exports: [CloudinaryImageComponent, CloudinaryVideoComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of cloudinary-library\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CloudinaryImageComponent, CloudinaryModule, CloudinaryVideoComponent };","map":{"version":3,"names":["HtmlImageLayer","cancelCurrentlyRunningPlugins","HtmlVideoLayer","accessibility","lazyload","placeholder","responsive","i0","VERSION","Component","Input","EventEmitter","Output","NgModule","APP_VERSION","SDKAnalyticsConstants","sdkSemver","techVersion","full","sdkCode","CloudinaryImageComponent","constructor","el","ngOnInit","htmlLayerInstance","nativeElement","children","cldImg","plugins","addAttributes","ngOnChanges","htmlPluginState","update","ngOnDestroy","forEach","attr","setAttribute","removeAttribute","ɵfac","CloudinaryImageComponent_Factory","t","ɵɵdirectiveInject","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","alt","width","height","loading","features","ɵɵNgOnChangesFeature","decls","vars","template","CloudinaryImageComponent_Template","rf","ctx","ɵɵelement","styles","ngDevMode","ɵsetClassMetadata","args","selector","styleUrls","CloudinaryVideoComponent","play","loadstart","playing","error","ended","controls","attributes","loop","muted","preload","autoPlay","autoplay","playsInline","htmlVideoLayerInstance","cldVid","sources","getVideoAttributes","cldPoster","attachRef","poster","playsinline","emitPlayEvent","emit","emitLoadstartEvent","emitPlayingEvent","emitErrorEvent","emitEndedEvent","innerRef","CloudinaryVideoComponent_Factory","outputs","consts","CloudinaryVideoComponent_Template","ɵɵelementStart","ɵɵlistener","CloudinaryVideoComponent_Template_video_play_0_listener","CloudinaryVideoComponent_Template_video_loadstart_0_listener","CloudinaryVideoComponent_Template_video_playing_0_listener","CloudinaryVideoComponent_Template_video_error_0_listener","CloudinaryVideoComponent_Template_video_ended_0_listener","ɵɵelementEnd","encapsulation","CloudinaryModule","CloudinaryModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Users/YC/Desktop/unitygym/node_modules/@cloudinary/ng/fesm2015/cloudinary-ng.js"],"sourcesContent":["import { HtmlImageLayer, cancelCurrentlyRunningPlugins, HtmlVideoLayer } from '@cloudinary/html';\nexport { accessibility, lazyload, placeholder, responsive } from '@cloudinary/html';\nimport * as i0 from '@angular/core';\nimport { VERSION, Component, Input, EventEmitter, Output, NgModule } from '@angular/core';\nimport '@cloudinary/url-gen/assets/CloudinaryImage';\nimport '@cloudinary/url-gen';\n\nlet APP_VERSION = '2.0.2';\n\n/**\n * Used by SDK Analytics as a token (?a_{token})\n */\nconst SDKAnalyticsConstants = {\n    sdkSemver: APP_VERSION,\n    techVersion: VERSION.full,\n    sdkCode: 'K'\n};\n\n/**\n * @mixin AngularSDK\n * @description The Cloudinary Angular SDK contains components like \\<advanced-image\\> to easily render your media assets from\n * Cloudinary. The SDK also comes with support for optional JS plugins that make the components smart, with features\n * like lazy loading, placeholder, accessibility & responsiveness.\n *\n * @example\n * <caption>\n *  Please note that the order of the plugins is important. See {@link https://cloudinary.com/documentation/sdks/js/frontend-frameworks/index.html#plugin-order|Plugin Order} for more details.\n * </caption>\n * // In your app.module.ts inject the library.\n * import { CloudinaryModule} from '@cloudinary/angular';\n *\n * imports: [\n *   ...,\n *   CloudinaryModule,\n * ],\n *\n * // In your component.ts use `@cloudinary/url-gen` to generate your transformations.\n * // Import the plugins you wish to use\n *\n * import {CloudinaryImage} from \"@cloudinary/url-gen/assets/CloudinaryImage\";\n * import {\n *  AdvancedImage,\n *  accessibility,\n *  responsive,\n *  lazyload,\n *  placeholder\n * } from '@cloudinary/angular';\n *\n * ngOnInit() {\n *   const myCld = new Cloudinary({ cloudName: 'demo'});\n *   this.img = myCld().image('sample');\n *\n *   this.plugins = [lazyload(), placeholder()]\n * }\n *\n * // In your view add the component with your transformation.\n * <advanced-image [cldImg]=\"this.img\" [plugins]=\"this.plugins\"></advanced-image>\n */\n/**\n * @memberOf AngularSDK\n * @type {Component}\n * @description The Cloudinary image component.\n * @prop {CloudinaryImage} transformation Generated by @cloudinary/url-gen\n * @prop {Plugins} plugins Advanced image component plugins accessibility(), responsive(), lazyload(), placeholder()\n * @prop imageAttributes Optional attributes include alt, width, height, loading\n */\nclass CloudinaryImageComponent {\n    constructor(el) {\n        this.el = el;\n    }\n    /**\n     * On init creates a new HTMLLayer instance and initializes with ref to img element,\n     * user generated cloudinaryImage and the plugins to be used.\n     */\n    ngOnInit() {\n        this.htmlLayerInstance = new HtmlImageLayer(this.el.nativeElement.children[0], this.cldImg, this.plugins, SDKAnalyticsConstants);\n        this.addAttributes();\n    }\n    /**\n     * On update, we cancel running plugins and update the image instance with the state of user\n     * cloudinaryImage and the state of plugins.\n     */\n    ngOnChanges() {\n        if (this.htmlLayerInstance) {\n            cancelCurrentlyRunningPlugins(this.htmlLayerInstance.htmlPluginState);\n            this.htmlLayerInstance.update(this.cldImg, this.plugins, SDKAnalyticsConstants);\n        }\n    }\n    /**\n     * On destroy, we cancel the currently running plugins.\n     */\n    ngOnDestroy() {\n        // safely cancel running events on destroy\n        cancelCurrentlyRunningPlugins(this.htmlLayerInstance.htmlPluginState);\n    }\n    /**\n     * Add attributes to img element.\n     */\n    addAttributes() {\n        ['alt', 'width', 'height', 'loading'].forEach(attr => {\n            if (this[attr]) {\n                this.el.nativeElement.children[0].setAttribute(attr, this[attr]);\n                this.el.nativeElement.removeAttribute(attr);\n            }\n        });\n    }\n}\nCloudinaryImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryImageComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCloudinaryImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CloudinaryImageComponent, selector: \"advanced-image\", inputs: { cldImg: \"cldImg\", plugins: \"plugins\", alt: \"alt\", width: \"width\", height: \"height\", loading: \"loading\" }, usesOnChanges: true, ngImport: i0, template: `\n    <img />\n  `, isInline: true, styles: [\":host{display:block}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryImageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'advanced-image',\n                    template: `\n    <img />\n  `,\n                    styleUrls: ['./cloudinary-image.component.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cldImg: [{\n                type: Input,\n                args: ['cldImg']\n            }], plugins: [{\n                type: Input,\n                args: ['plugins']\n            }], alt: [{\n                type: Input,\n                args: ['alt']\n            }], width: [{\n                type: Input,\n                args: ['width']\n            }], height: [{\n                type: Input,\n                args: ['height']\n            }], loading: [{\n                type: Input,\n                args: ['loading']\n            }] } });\n\n/**\n * @memberOf AngularSDK\n * @type {Component}\n * @description The Cloudinary video component.\n * @prop {CloudinaryVideo} transformation Generated by @cloudinary/url-gen\n * @prop {VideoPoster} transformation Generated by @cloudinary/url-gen\n * @prop {Plugins} plugins Advanced image component plugins lazyload()\n * @prop videoAttributes Optional attributes include controls, loop, muted, poster, preload, autoplay\n * @prop videoEvents Optional video events include play, loadstart, playing, error, ended\n * @prop {VideoSources} sources Optional sources to generate\n * @example\n *  <caption>\n *  Using custom defined resources.\n * </caption>\n *   vid = new CloudinaryVideo('dog', {cloudName: 'demo'});\n *   sources = [\n {\n        type: 'mp4',\n        codecs: ['vp8', 'vorbis'],\n        transcode: videoCodec(auto())\n},\n {\n        type: 'webm',\n        codecs: ['avc1.4D401E', 'mp4a.40.2'],\n         transcode: videoCodec(auto())\n      }];\n *\n * <advanced-video [cldvid]=\"vid\" [sources]=\"sources\" controls></advanced-video>\n */\nclass CloudinaryVideoComponent {\n    constructor(el) {\n        this.el = el;\n        // Event emitters\n        this.play = new EventEmitter();\n        this.loadstart = new EventEmitter();\n        this.playing = new EventEmitter();\n        this.error = new EventEmitter();\n        this.ended = new EventEmitter();\n        // supported video attributes\n        this.controls = this.el.nativeElement.attributes.controls;\n        this.loop = this.el.nativeElement.attributes.loop;\n        this.muted = this.el.nativeElement.attributes.muted;\n        this.preload = this.el.nativeElement.attributes.preload;\n        this.autoPlay = this.el.nativeElement.attributes.autoplay;\n        this.playsInline = this.el.nativeElement.attributes.playsInline;\n    }\n    /**\n     * On init creates a new HTMLVideoLayer instance and initializes with ref to video element,\n     * user generated cloudinaryVideo and the plugins to be used.\n     */\n    ngOnInit() {\n        this.htmlVideoLayerInstance = new HtmlVideoLayer(this.el.nativeElement.children[0], this.cldVid, this.sources, this.plugins, this.getVideoAttributes(), this.cldPoster);\n        // check if video should be muted. We need to take care of this here since Angular has a bug with binding the muted\n        // attribute\n        if (this.muted) {\n            this.el.nativeElement.children[0].muted = true;\n        }\n        // attach ref to innerRef input\n        this.attachRef();\n    }\n    /**\n     * On update, we cancel running plugins and update the video instance if the src\n     * was changed.\n     */\n    ngOnChanges() {\n        if (this.htmlVideoLayerInstance) {\n            cancelCurrentlyRunningPlugins(this.htmlVideoLayerInstance.htmlPluginState);\n            this.htmlVideoLayerInstance.update(this.cldVid, this.sources, this.plugins, this.getVideoAttributes(), this.cldPoster);\n        }\n    }\n    /**\n     * On destroy, we cancel the currently running plugins.\n     */\n    ngOnDestroy() {\n        // Safely cancel running events on destroy\n        cancelCurrentlyRunningPlugins(this.htmlVideoLayerInstance.htmlPluginState);\n    }\n    /**\n     * Returns video attributes.\n     */\n    getVideoAttributes() {\n        return {\n            controls: this.controls,\n            loop: this.loop,\n            muted: this.muted,\n            poster: this.poster,\n            preload: this.preload,\n            autoplay: this.autoPlay,\n            playsinline: this.playsInline\n        };\n    }\n    emitPlayEvent() {\n        this.play.emit();\n    }\n    emitLoadstartEvent() {\n        this.loadstart.emit();\n    }\n    emitPlayingEvent() {\n        this.playing.emit();\n    }\n    emitErrorEvent() {\n        this.error.emit();\n    }\n    emitEndedEvent() {\n        this.ended.emit();\n    }\n    /**\n     * Attach both this.videoRef and props.innerRef as ref to the given element.\n     */\n    attachRef() {\n        if (this.innerRef) {\n            this.innerRef.nativeElement = this.el.nativeElement.children[0];\n        }\n    }\n}\nCloudinaryVideoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryVideoComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCloudinaryVideoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: CloudinaryVideoComponent, selector: \"advanced-video\", inputs: { cldVid: \"cldVid\", cldPoster: \"cldPoster\", sources: \"sources\", plugins: \"plugins\", poster: \"poster\", innerRef: \"innerRef\" }, outputs: { play: \"play\", loadstart: \"loadstart\", playing: \"playing\", error: \"error\", ended: \"ended\" }, usesOnChanges: true, ngImport: i0, template: `<video (play)=\"emitPlayEvent()\"\n                    (loadstart)=\"emitLoadstartEvent()\"\n                    (playing)=\"emitPlayingEvent()\"\n                    (error)=\"emitErrorEvent\"\n                    (ended)=\"emitEndedEvent\">\n            </video>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryVideoComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'advanced-video',\n                    template: `<video (play)=\"emitPlayEvent()\"\n                    (loadstart)=\"emitLoadstartEvent()\"\n                    (playing)=\"emitPlayingEvent()\"\n                    (error)=\"emitErrorEvent\"\n                    (ended)=\"emitEndedEvent\">\n            </video>`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cldVid: [{\n                type: Input,\n                args: ['cldVid']\n            }], cldPoster: [{\n                type: Input,\n                args: ['cldPoster']\n            }], sources: [{\n                type: Input,\n                args: ['sources']\n            }], plugins: [{\n                type: Input,\n                args: ['plugins']\n            }], poster: [{\n                type: Input,\n                args: ['poster']\n            }], innerRef: [{\n                type: Input,\n                args: ['innerRef']\n            }], play: [{\n                type: Output\n            }], loadstart: [{\n                type: Output\n            }], playing: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }], ended: [{\n                type: Output\n            }] } });\n\nclass CloudinaryModule {\n}\nCloudinaryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCloudinaryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryModule, declarations: [CloudinaryImageComponent, CloudinaryVideoComponent], exports: [CloudinaryImageComponent, CloudinaryVideoComponent] });\nCloudinaryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: CloudinaryModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [CloudinaryImageComponent, CloudinaryVideoComponent],\n                    exports: [CloudinaryImageComponent, CloudinaryVideoComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of cloudinary-library\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CloudinaryImageComponent, CloudinaryModule, CloudinaryVideoComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}