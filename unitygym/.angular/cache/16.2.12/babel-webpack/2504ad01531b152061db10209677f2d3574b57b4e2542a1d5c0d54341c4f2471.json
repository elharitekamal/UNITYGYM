{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/auth';\n  }\n  login(form) {\n    return this.http.post(this.apiUrl + `/authenticate`, form, {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n  }\n  register(form) {\n    return this.http.post(this.apiUrl + `/register`, form, {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","login","form","post","headers","Accept","register","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\YC\\Desktop\\unitygym\\src\\app\\services\\authservice.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Utilisateur } from '../models/utilisateur';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\nprivate apiUrl = 'http://localhost:8080/auth';\n\n  constructor(private http: HttpClient) { }\n\n  login(form:FormGroup) :Observable<String>{\n    return this.http.post<String>(this.apiUrl+`/authenticate`,form,{ headers: { Accept: 'application/json' } });\n  }\n\n  register(form:FormGroup): Observable<String> {\n    return this.http.post<String>(this.apiUrl+`/register`, form,{ headers: { Accept: 'application/json' } });\n  }\n\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFlB,KAAAC,MAAM,GAAG,4BAA4B;EAEH;EAExCC,KAAKA,CAACC,IAAc;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,IAAI,CAACH,MAAM,GAAC,eAAe,EAACE,IAAI,EAAC;MAAEE,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAkB;IAAE,CAAE,CAAC;EAC7G;EAEAC,QAAQA,CAACJ,IAAc;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,IAAI,CAACH,MAAM,GAAC,WAAW,EAAEE,IAAI,EAAC;MAAEE,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAkB;IAAE,CAAE,CAAC;EAC1G;EAAC,QAAAE,CAAA,G;qBAbUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}